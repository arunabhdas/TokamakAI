

package com.tokamak.mobile.android.tokamakai.ui.components

import androidx.compose.runtime.*
import androidx.compose.runtime.saveable.rememberSaveable
import androidx.compose.ui.Modifier
import androidx.compose.ui.tooling.preview.Preview
import java.text.SimpleDateFormat
import java.util.Calendar
import java.util.Date

val kDateFormatter = SimpleDateFormat("EEE, MMM d")

fun offsetDate(date: Date, offset: Int): Date {
    val newDate = Calendar.getInstance()
    newDate.time = date
    newDate.add(Calendar.DAY_OF_YEAR, offset)
    return newDate.time
}

/*
 * A component for navigating between dates.
 *
 * DayNavigationControl is responsible for providing interaction and state management to the
 * stateless composable [DayNavigation] generated by Relay.
 */
@Composable
fun DayNavigationControl(
    modifier: Modifier = Modifier,
    initialDate: Date = Date(),
    onPrevTapped: (newDate: Date) -> Unit,
    onNextTapped: (newDate: Date) -> Unit,
) {
    var date by rememberSaveable { mutableStateOf(initialDate) }

    /*
    DayNavigation(
        date = kDateFormatter.format(date),
        modifier = modifier,
        onPrevTapped = {
            date = offsetDate(date, -1)
            onPrevTapped(date)
        },
        onNextTapped = {
            date = offsetDate(date, +1)
            onNextTapped(date)
        }
    )
    */
}

@Preview
@Composable
fun DayNavigationPreview() {
    DayNavigationControl(
        onPrevTapped = {}, onNextTapped = {})
}